[DEFAULT]
VERBOSITY = 0
; 1 This tells whether or not to give output. (0: None, 1: Streams, 2: Found/Not Found, 3: Detected [slope])
MAX_HOLD = 20
; This is the amount of loops it the counter holds true.
ANGLE_TOLERANCE = 0.3      
; This is the leeway in how off the angle can be.
X_TARGET = 320             
; This is the target point's x value
Y_TARGET = 240             
; This is the target point's y value
HALF_TARGET = False
; This is if the target isn't a regular shape
OFFSET_DIRECTION = None
; This is the direction to offset; UP, DOWN, LEFT, RIGHT
TARGET_COLOR = 0 255 0
; This is the color of the aim position circle, BGR
FOUND_CENTER_COLOR = 0 0 255
; This is the color of the current center of vision target, BGR
VERTICAL_CHANGE = 5
; This is the minimum x difference to be considered a vertical slope. returns 99 if x2-x2 < this number.


[SETTINGS]
VERBOSITY = 2             
; 1 This tells whether or not to give output. (0: None, 1: Streams, 2: Found/Not Found, 3: Detected [slope])
SERVER = 10.26.43.2        
; 10.xx.xx.2 This is the NetworkTable server the raspi will attempt to connect to.
CONNECT_TO_SERVER = False  
; False This tells networktable whether or not to attempt connection to the server.
VERTICAL_CHANGE = 5
; This is the minimum x difference to be considered a vertical slope. returns 99 if x2-x2 < this number
MIN_LINE_LENGTH = 5
; Minimum line length to be a line for hough line transform
MAX_LINE_GAP = 10
; Max gap between points for hough line tranform
FPS = 10
; Frames per second on the camera
EXPOSURE = 1000
; 10 Typically
MIN_COLOR = 113 89 0
; Min color range UV: 113 89 0
MAX_COLOR = 123 255 80
; Max color range UV: 123 255 80

[2019-High-Target]
ANGLE_NAMES = LEFT_ANGLE RIGHT_ANGLE BOTTOM_ANGLE
; These are the angles to be detected, space delineated, *in the order of left to right*. Angle is 99 if vertical.
LEFT_ANGLE = 1.73          
; 1.73378583657 This is the angle calculated for the left side.
RIGHT_ANGLE = -1.73        
; -1.73378583657 This is the angle calculated for the right side.
BOTTOM_ANGLE = 0           
; 0 This is the angle calculated for the bottom.
ANGLE_TOLERANCE = 0.4    
; This is the leeway in how off the angle can be.
MAX_HOLD = 15              
; This is the amount of loops it the counter holds true.
X_TARGET = 320             
; This is the target point's x value
Y_TARGET = 160             
; This is the target point's y value
HALF_TARGET = True
; This is if the target isn't a regular shape
OFFSET_DIRECTION = UP
; This is the direction to offset
TARGET_COLOR = 0 255 0
; This is the color of the aim position circle, BGR
FOUND_CENTER_COLOR = 0 255 255
; This is the color of the current center of vision target, BGR

# [Random-Rectangle]
# ANGLE_NAMES = LEFT_ANGLE RIGHT_ANGLE BOTTOM_ANGLE
# ; These are the angles to be detected, space delineated.
# LEFT_ANGLE = 99          
# ; 1.73378583657 This is the angle calculated for the left side.
# RIGHT_ANGLE = 99        
# ; -1.73378583657 This is the angle calculated for the right side.
# BOTTOM_ANGLE = 0           
# ; 0 This is the angle calculated for the bottom.
# ANGLE_TOLERANCE = 0.3      
# ; This is the leeway in how off the angle can be.
# MAX_HOLD = 15              
# ; This is the amount of loops it the counter holds true.
# X_TARGET = 320             
# ; This is the target point's x value
# Y_TARGET = 240             
# ; This is the target point's y value
# HALF_TARGET = False
# ; This is if the target isn't a regular shape
# TARGET_COLOR = 255 0 0
# ; This is the color of the aim position circle, BGR
# FOUND_CENTER_COLOR = 0 255 255
# ; This is the color of the current center of vision target, BGR
